{"ast":null,"code":"var _jsxFileName = \"/home/nikkid/Desktop/wyncode/pitch-app/src/components/SearchResults/SearchResults.js\";\nimport React from \"react\";\nimport styles from \"./SearchResults.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  }\n}));\n\nclass SearchResults extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      title: \"\",\n      favorite: true\n    };\n\n    this.handleConfidenceClick = async () => {\n      const _ref = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=confidence&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref.data;\n\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Confidence Boost\"\n      });\n      console.log(data);\n      return this.state.handleConfidenceClick;\n    };\n\n    this.handleLoveClick = async () => {\n      const _ref2 = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=selflove&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref2.data;\n\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Love\"\n      });\n      console.log(data);\n      return this.state.handleLoveClick;\n    };\n\n    this.handleMakeMeSmileClick = async () => {\n      const _ref3 = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=funny&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref3.data;\n\n      this.setState({\n        data: \"\"\n      });\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Make Me Smile\"\n      });\n      console.log(data);\n      return this.state.handleMakeMeSmile;\n    };\n  }\n\n  render() {\n    // const { data } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.title === \"\" ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Choose a Category \") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: styles.searchResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"confidence-booster\",\n      name: \"Confidence Booster\",\n      type: \"submit\",\n      onClick: this.handleConfidenceClick === !this.handleConfidenceClick ? false : this.handleConfidenceClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Confidence Booster\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleMakeMeSmileClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Make me Smile/Laugh\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleLoveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Love\"), \" \"), React.createElement(\"div\", {\n      className: useStyles.roots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 160,\n      className: useStyles.gridList,\n      cols: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.data.map((gif, index) => React.createElement(GridListTile, {\n      key: index,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      controls: true,\n      loop: true,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: gif.images.downsized_small.mp4,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/home/nikkid/Desktop/wyncode/pitch-app/src/components/SearchResults/SearchResults.js"],"names":["React","styles","makeStyles","GridList","GridListTile","axios","require","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","SearchResults","Component","state","data","title","favorite","handleConfidenceClick","get","setState","console","log","handleLoveClick","handleMakeMeSmileClick","handleMakeMeSmile","render","searchResults","roots","map","gif","index","images","downsized_small","mp4"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./SearchResults.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  }\n}));\nclass SearchResults extends React.Component {\n  state = {\n    data: [],\n    title: \"\",\n    favorite: true\n  };\n\n  handleConfidenceClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=confidence&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: data.data });\n    this.setState({ title: \"Confidence Boost\" });\n    console.log(data);\n    return this.state.handleConfidenceClick;\n  };\n\n  handleLoveClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=selflove&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: data.data });\n    this.setState({ title: \"Love\" });\n    console.log(data);\n    return this.state.handleLoveClick;\n  };\n\n  handleMakeMeSmileClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=funny&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: \"\" });\n    this.setState({ data: data.data });\n    this.setState({ title: \"Make Me Smile\" });\n    console.log(data);\n    return this.state.handleMakeMeSmile;\n  };\n\n  render() {\n    // const { data } = this.state;\n    return (\n      <div>\n        {this.state.title === \"\" ? (\n          <p> Choose a Category </p>\n        ) : (\n          <p>{this.state.title}</p>\n        )}\n        <div className={styles.searchResults}>\n          <button\n            id=\"confidence-booster\"\n            name=\"Confidence Booster\"\n            type=\"submit\"\n            onClick={\n              this.handleConfidenceClick === !this.handleConfidenceClick\n                ? false\n                : this.handleConfidenceClick\n            }\n          >\n            Confidence Booster\n          </button>\n          <button type=\"submit\" onClick={this.handleMakeMeSmileClick}>\n            Make me Smile/Laugh\n          </button>\n          <button type=\"submit\" onClick={this.handleLoveClick}>\n            Love\n          </button>\n          {/* {data.map((gif, index) => {\n            return (\n              <div className={styles.gif} key={index}>\n                <video controls loop autoPlay>\n                  <source\n                    src={gif.images.downsized_small.mp4}\n                    type=\"video/mp4\"\n                  />\n                </video>\n                {/* <button onClick={this.handleFavoritesClick} type=\"submit\">\n                  Add to Favorites\n                </button> */}{\" \"}\n          {/* </div> */}\n          {/* ); */}\n          {/* })} */}\n        </div>\n\n        <div className={useStyles.roots}>\n          <GridList cellHeight={160} className={useStyles.gridList} cols={3}>\n            {this.state.data.map((gif, index) => (\n              <GridListTile key={index} cols={1}>\n                <video controls loop autoPlay>\n                  <source\n                    src={gif.images.downsized_small.mp4}\n                    type=\"video/mp4\"\n                  />\n                </video>\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}