{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @class\n * @classdesc Represents an individual element in a Sync List.\n * @alias ListItem\n * @property {Number} index The index, within the containing List, of this item. This index is stable;\n * even if lower-indexed Items are removed, this index will remain as is.\n * @property {Object} value The contents of the item.\n * @property {Date} dateUpdated Date when the List Item was last updated.\n */\n\nclass ListItem {\n  /**\n   * @private\n   * @constructor\n   * @param {Object} data Item descriptor\n   * @param {Number} data.index Item identifier\n   * @param {String} data.uri Item URI\n   * @param {Object} data.value Item data\n   */\n  constructor(data) {\n    this.data = data;\n  }\n\n  get uri() {\n    return this.data.uri;\n  }\n\n  get revision() {\n    return this.data.revision;\n  }\n\n  get lastEventId() {\n    return this.data.lastEventId;\n  }\n\n  get dateUpdated() {\n    return this.data.dateUpdated;\n  }\n\n  get dateExpires() {\n    return this.data.dateExpires;\n  }\n\n  get index() {\n    return this.data.index;\n  }\n\n  get value() {\n    return this.data.value;\n  }\n  /**\n   * @private\n   */\n\n\n  update(eventId, revision, value, dateUpdated) {\n    this.data.lastEventId = eventId;\n    this.data.revision = revision;\n    this.data.value = value;\n    this.data.dateUpdated = dateUpdated;\n    return this;\n  }\n  /**\n   * @private\n   */\n\n\n  updateDateExpires(dateExpires) {\n    this.data.dateExpires = dateExpires;\n  }\n\n}\n\nexports.ListItem = ListItem;\nexports.default = ListItem;","map":null,"metadata":{},"sourceType":"script"}