{"ast":null,"code":"var _jsxFileName = \"/home/techhire/Desktop/apps/pitch-app/src/components/SearchResults/SearchResults.js\";\nimport React from \"react\";\nimport styles from \"./SearchResults.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\n\nconst axios = require(\"axios\");\n\nconst background = 'http://www.medpreps.com/wp-content/uploads/2012/08/interview-strength.jpg';\nconst images = [{\n  url: 'http://www.medpreps.com/wp-content/uploads/2012/08/interview-strength.jpg',\n  title: 'Confidence Booster',\n  width: '40%'\n}, {\n  url: '/static/images/grid-list/burgers.jpg',\n  title: 'Love',\n  width: '30%'\n}, {\n  url: '/static/images/grid-list/camera.jpg',\n  title: 'Make Me Smile/Laugh',\n  width: '30%'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  root2: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%'\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%'\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity')\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: \"\".concat(theme.spacing(2), \"px \").concat(theme.spacing(4), \"px \").concat(theme.spacing(1) + 6, \"px\")\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity')\n  }\n}));\n\nclass SearchResults extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      title: \"\",\n      favorite: true\n    };\n\n    this.handleConfidenceClick = async () => {\n      const _ref = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=confidence&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref.data;\n\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Confidence Boost\"\n      });\n      console.log(data);\n      return this.state.handleConfidenceClick;\n    };\n\n    this.handleLoveClick = async () => {\n      const _ref2 = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=selflove&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref2.data;\n\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Love\"\n      });\n      console.log(data);\n      return this.state.handleLoveClick;\n    };\n\n    this.handleMakeMeSmileClick = async () => {\n      const _ref3 = await axios.get(\"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=funny&limit=25&offset=0&rating=PG&lang=en\"),\n            data = _ref3.data;\n\n      this.setState({\n        data: \"\"\n      });\n      this.setState({\n        data: data.data\n      });\n      this.setState({\n        title: \"Make Me Smile\"\n      });\n      console.log(data);\n      return this.state.handleMakeMeSmile;\n    };\n  }\n\n  render() {\n    // const { data } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.title === \"\" ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" Choose a Category \") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.title), React.createElement(ButtonBase, {\n      focusRipple: true,\n      focusVisibleClassName: useStyles.focusVisible,\n      className: useStyles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: useStyles.imageSrc,\n      style: {\n        backgroundImage: \"url(\".concat(background, \")\")\n      },\n      onClick: this.handleConfidenceClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: useStyles.imageBackdrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: useStyles.imageButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"span\",\n      variant: \"subtitle1\",\n      color: \"inherit\",\n      className: useStyles.imageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: useStyles.imageMarked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: useStyles.roots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 160,\n      className: useStyles.gridList,\n      cols: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.data.map((gif, index) => React.createElement(GridListTile, {\n      key: index,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      controls: true,\n      loop: true,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: gif.images.downsized_small.mp4,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/home/techhire/Desktop/apps/pitch-app/src/components/SearchResults/SearchResults.js"],"names":["React","styles","makeStyles","GridList","GridListTile","ButtonBase","Typography","axios","require","background","images","url","title","width","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","paper","root2","minWidth","gridList","height","image","position","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","color","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","SearchResults","Component","state","data","favorite","handleConfidenceClick","get","setState","console","log","handleLoveClick","handleMakeMeSmileClick","handleMakeMeSmile","render","backgroundImage","roots","map","gif","index","downsized_small","mp4"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./SearchResults.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nconst axios = require(\"axios\");\n\nconst background = 'http://www.medpreps.com/wp-content/uploads/2012/08/interview-strength.jpg';\n\nconst images = [\n  {\n    url: 'http://www.medpreps.com/wp-content/uploads/2012/08/interview-strength.jpg',\n    title: 'Confidence Booster',\n    width: '40%',\n  },\n  {\n    url: '/static/images/grid-list/burgers.jpg',\n    title: 'Love',\n    width: '30%',\n  },\n  {\n    url: '/static/images/grid-list/camera.jpg',\n    title: 'Make Me Smile/Laugh',\n    width: '30%',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  root2: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  }\n}));\n\nclass SearchResults extends React.Component {\n  state = {\n    data: [],\n    title: \"\",\n    favorite: true\n  };\n\n  handleConfidenceClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=confidence&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: data.data });\n    this.setState({ title: \"Confidence Boost\" });\n    console.log(data);\n    return this.state.handleConfidenceClick;\n  };\n\n  handleLoveClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=selflove&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: data.data });\n    this.setState({ title: \"Love\" });\n    console.log(data);\n    return this.state.handleLoveClick;\n  };\n\n  handleMakeMeSmileClick = async () => {\n    const { data } = await axios.get(\n      \"https://api.giphy.com/v1/gifs/search?api_key=duywYDviRp03Bk2OT6ZrkE0Ccl3ODlUA&q=funny&limit=25&offset=0&rating=PG&lang=en\"\n    );\n    this.setState({ data: \"\" });\n    this.setState({ data: data.data });\n    this.setState({ title: \"Make Me Smile\" });\n    console.log(data);\n    return this.state.handleMakeMeSmile;\n  };\n\n  render() {\n    // const { data } = this.state;\n    return (\n      <div>\n        {this.state.title === \"\" ? (\n          <p> Choose a Category </p>\n        ) : (\n          <p>{this.state.title}</p>\n      )}\n\n      <ButtonBase\n          focusRipple\n          focusVisibleClassName={useStyles.focusVisible}\n          className={useStyles.image}\n        >\n          <span\n            className={useStyles.imageSrc}\n            style={{\n              backgroundImage: `url(${background})`,\n            }}\n            onClick={this.handleConfidenceClick}\n          />\n          <span className={useStyles.imageBackdrop} />\n          <span className={useStyles.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={useStyles.imageTitle}\n            >\n              <span className={useStyles.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n        {/* <div className={styles.searchResults}>\n      \n              <button\n                id=\"confidence-booster\"\n                name=\"Confidence Booster\"\n                type=\"submit\"\n                onClick={\n                  this.handleConfidenceClick === !this.handleConfidenceClick\n                    ? false\n                    : this.handleConfidenceClick\n                }>\n                Confidence Booster\n              </button>     \n\n              <button\n                  id=\"make-me-smile\" \n                  name=\"make me smile\"\n                  type=\"submit\" \n                  onClick={this.handleMakeMeSmileClick}>\n                    Make me Smile/Laugh\n              </button>\n\n          <button type=\"submit\" onClick={this.handleLoveClick}>\n            Love\n          </button>\n        </div> */}\n\n        <div className={useStyles.roots}>\n          <GridList cellHeight={160} className={useStyles.gridList} cols={3}>\n            {this.state.data.map((gif, index) => (\n              <GridListTile key={index} cols={1}>\n                <video controls loop autoPlay>\n                  <source\n                    src={gif.images.downsized_small.mp4}\n                    type=\"video/mp4\"\n                  />\n                </video>\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}