{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst SUBSCRIPTIONS_PATH = '/v4/Subscriptions';\nconst MAPS_PATH = '/v3/Maps';\nconst LISTS_PATH = '/v3/Lists';\nconst DOCUMENTS_PATH = '/v3/Documents';\nconst STREAMS_PATH = '/v3/Streams';\nconst INSIGHTS_PATH = '/v3/Insights';\n\nfunction getWithDefault(container, key, defaultValue) {\n  if (container && typeof container[key] !== 'undefined') {\n    return container[key];\n  }\n\n  return defaultValue;\n}\n/**\n * Settings container for Sync library\n */\n\n\nclass Configuration {\n  /**\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n    const region = options.region || 'us1';\n    const defaultCdsUrl = \"https://cds.\".concat(region, \".twilio.com\");\n    const baseUri = options.cdsUri || defaultCdsUrl;\n    this.settings = {\n      subscriptionsUri: baseUri + SUBSCRIPTIONS_PATH,\n      documentsUri: baseUri + DOCUMENTS_PATH,\n      listsUri: baseUri + LISTS_PATH,\n      mapsUri: baseUri + MAPS_PATH,\n      streamsUri: baseUri + STREAMS_PATH,\n      insightsUri: baseUri + INSIGHTS_PATH,\n      sessionStorageEnabled: getWithDefault(options.Sync, 'enableSessionStorage', true)\n    };\n  }\n\n  get subscriptionsUri() {\n    return this.settings.subscriptionsUri;\n  }\n\n  get documentsUri() {\n    return this.settings.documentsUri;\n  }\n\n  get listsUri() {\n    return this.settings.listsUri;\n  }\n\n  get mapsUri() {\n    return this.settings.mapsUri;\n  }\n\n  get streamsUri() {\n    return this.settings.streamsUri;\n  }\n\n  get insightsUri() {\n    return this.settings.insightsUri;\n  }\n\n  get backoffConfig() {\n    return this.settings.backoffConfig || {};\n  }\n\n  get sessionStorageEnabled() {\n    return this.settings.sessionStorageEnabled;\n  }\n\n}\n\nexports.Configuration = Configuration;","map":null,"metadata":{},"sourceType":"script"}