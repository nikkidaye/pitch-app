{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst log = require(\"loglevel\");\n\nfunction prepareLine(prefix, args) {\n  return [\"\".concat(new Date().toISOString(), \" Twilsock \").concat(prefix, \":\")].concat(Array.from(args));\n}\n\nclass Logger {\n  constructor(prefix) {\n    this.prefix = '';\n    this.prefix = prefix !== null && prefix !== undefined && prefix.length > 0 ? ' ' + prefix + ':' : '';\n  }\n\n  setLevel(level) {\n    log.setLevel(level);\n  }\n\n  static setLevel(level) {\n    log.setLevel(level);\n  }\n\n  trace(...args) {\n    log.debug.apply(null, prepareLine('T', args));\n  }\n\n  debug(...args) {\n    log.debug.apply(null, prepareLine('D', args));\n  }\n\n  info(...args) {\n    log.info.apply(null, prepareLine('I', args));\n  }\n\n  warn(...args) {\n    log.warn.apply(null, prepareLine('W', args));\n  }\n\n  error(...args) {\n    log.error.apply(null, prepareLine('E', args));\n  }\n\n  static trace(...args) {\n    log.trace.apply(null, prepareLine('T', args));\n  }\n\n  static debug(...args) {\n    log.debug.apply(null, prepareLine('D', args));\n  }\n\n  static info(...args) {\n    log.info.apply(null, prepareLine('I', args));\n  }\n\n  static warn(...args) {\n    log.warn.apply(null, prepareLine('W', args));\n  }\n\n  static error(...args) {\n    log.error.apply(null, prepareLine('E', args));\n  }\n\n}\n\nexports.Logger = Logger;\nlet logInstance = new Logger('');\nexports.log = logInstance;","map":null,"metadata":{},"sourceType":"script"}